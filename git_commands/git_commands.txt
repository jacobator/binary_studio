1. Работа с историей изменений
	1.1 git log ^master ^develop develop-feature1 --pretty="%s - %cn" --since=3.hours
	   или если на Windows:
	   git log ^^master ^^develop develop-feature1 --pretty="%s - %cn" --since=3.hours
	1.2 git log master develop --pretty="%s - %cn - %cd" --grep=231
(название ветки включает коммиты из нее; названия веток с префиксом ^ (или ^^ для Windows) исключают
из коммиты этих веток; --pretty позволяет форматировать лог; %s - виводит сообщение коммита;
%cn - автор коммита; %cd - дата коммита; --since=3.hours - фильтрует коммиты, оставляя только те,
которые были за последние 3 часа; --grep=231 - фильтрует коммиты, оставляя только те, в сообщениях которых есть "231";
по умолчанию сортировка коммитов по дате, первые более новые;)

2. Избирательное слияние
1) git log
(выводим лог коммитов, копируем SHA-1 checksum своего фикс-коммита. Например 834821984cdbfaaf3cc3785c1d342a9bb474f69f)

2) git checkout develop
(переключаемся на ветку develop)

3) git cherry-pick 834821984cdbfaaf3cc3785c1d342a9bb474f69f
(локально добавляем фикс-коммит в ветку develop)

4) git push
(пушим изменение ветки develop на сервер)

3. Исправление ошибок
Общая идея: необходимо изменить последние 2 "неправильные" коммита(если их 2 как на картинке) на "правильные"
локально и затем залить их на сервер.
Для этого:

1) git checkout develop-feature3
(переходим в ветку develop-feature3)

2) git rebase -i HEAD~2
(делаем интерактивное перемещение двух последних коммитов внутри своей же ветки. Проще говоря, данная
комманда позволит нам заменить последние два коммита. В результате откроется файл со списком неоходимых
нам коммитов. Что-то типо такого:
	"pick 60d7ad3 wrong commit"
	"pick ec3eca1 some second wrong commit"
В нем надо указать, что мы хотим изменить сообщения данных коммитов(меняет pick на r), сохраняем файл:
	"r 60d7ad3 wrong commit"
	"r ec3eca1 some second wrong commit"
Далее откроются файлы сообщений коммитов по очереди, и в них нужно отредактировать сообщения:
	"wrong commit"
меняем на:
	"777: proper commit"
далее сохраняем и меняем следующие сообщения)

3) git push -f
(После всего этого нужно обновить ветку на сервере. Для этого выполняет форсированный пуш т.к. обычный пуш
выдаст ошибку из-за того, что у локально у нас затерлись коммиты "неправильные" коммиты)